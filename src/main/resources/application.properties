# Datenquelle wird auf filebasierte H2-Datenbank konfiguriert, die sich im 
# Root-Verzeichnis des Maven-Projekts befindet und ohne Tracing in ein File
# sowie Tracing in System.out auf Level Error (1) sowie mit Benutzername sa und
# leerem Passwort
spring.datasource.url=jdbc:h2:./personenregister;TRACE_LEVEL_FILE=0;TRACE_LEVEL_SYSTEM_OUT=1
spring.datasource.username=sa
spring.datasource.password=

# Damit die von JPA (Hibernate) verwalteten Tabellen nicht bei jedem Neustart (Run) gel\u00f6scht
# werden, muss die Strategie von  Hibernate auf Update statt dem Default (create-drop) gesetzt werden
spring.jpa.hibernate.ddl-auto=update

# Beim Starten des Projekts sollen die INSERT-BEFEHLE ausgef\u00fchrt werden in src\main\ressources\data.sql
# Bei erneutem Start werden diese jedoch fehlschlagen, daher trotzdem fortfahren
spring.datasource.continue-on-error=true
# Damit data.sql auch Umlaute haben darf, die File-Encodierung setzen
spring.datasource.sqlScriptEncoding=UTF-8

# Damit Hibernate bei Beziehungen von einer Entit\u00e4t zu anderen Entit\u00e4ten (List<...>)
# keine LazyLoadInitializationException wirft, erlauben, dass die Objekte auch 
# nachtr\u00e4glich geladen werden k\u00f6nnen
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

# Erm\u00f6glicht, dass die H2-Verwaltungsoberfl\u00e4che \u00fcber /console aufgerufen werden kann
# Darf nat\u00fcrlich nur in einem Development-Kontext gesetzt sein
# Anmeldung gem\u00e4ss Angaben oben, aber bei URL ohne die Parameter (;...)
spring.h2.console.enabled=true
spring.h2.console.path=/console

# Tomcat-Server-Port
server.port = 8083

# Logging-Konfiguration f\u00fcr alle Services so, dass ausreichend Infos f\u00fcrs 
# Entwickeln vorhanden
logging.level.org.springframework=INFO
logging.level.org.apache=INFO

# Banner in Konsole customizen (siehe src\main\resources\banner.txt
# Erstellt mit Schriftart Jazmine in http://patorjk.com/software/taag
spring.banner.location=classpath:banner.txt