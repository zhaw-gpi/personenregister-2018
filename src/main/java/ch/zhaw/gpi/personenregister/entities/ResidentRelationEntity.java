/**
 * This file was generated by the Jeddict -> wurde aber von Hand angepasst
 */
package ch.zhaw.gpi.personenregister.entities;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * @author Bekim
 */
@Entity(name="ResidentRelation")
@Table(name = "RESIDENT_RELATION")
public class ResidentRelationEntity implements Serializable {

    @Column(name = "ID", unique = true, nullable = false)
    @Id
    private String id;

    // siehe wegen fetch auch https://stackoverflow.com/questions/11746499/how-to-solve-the-failed-to-lazily-initialize-a-collection-of-role-hibernate-ex
    @OneToMany(fetch = FetchType.EAGER, targetEntity = ResidentEntity.class, mappedBy = "residentRelationEntity")
    private List<ResidentEntity> residentEntities;

    public String getId() {
        return this.id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public List<ResidentEntity> getResidentEntities() {
        if (residentEntities == null) {
            residentEntities = new ArrayList<>();
        }
        return this.residentEntities;
    }

    public void setResidentEntities(List<ResidentEntity> residentEntities) {
        this.residentEntities = residentEntities;
    }

    public void addResidentEntity(ResidentEntity residentEntity) {
        getResidentEntities().add(residentEntity);
        residentEntity.setResidentRelationEntity(this);
    }

    public void removeResidentEntity(ResidentEntity residentEntity) {
        getResidentEntities().remove(residentEntity);
        residentEntity.setResidentRelationEntity(null);
    }

}